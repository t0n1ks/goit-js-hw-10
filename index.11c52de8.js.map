{"mappings":"AAIOA,eAAeC,IAGpB,IACE,MAAMC,QAAiBC,MAHb,sCAGwB,CAChCC,QAAS,CACP,YARQ,2EAYZ,GAAIF,EAASG,GAAI,CAEf,aADqBH,EAASI,M,CAG9B,MAAM,IAAIC,MAAM,yB,CAElB,MAAOC,GACP,MAAM,IAAID,MAAM,yB,EAIbP,eAAeS,EAAgBC,GACpC,MAAMC,EAAM,wDAAwDD,IAEpE,IACE,MAAMR,QAAiBC,MAAMQ,EAAK,CAChCP,QAAS,CACP,YA7BQ,2EAiCZ,GAAIF,EAASG,GAAI,CAEf,aADmBH,EAASI,QAChB,E,CAEZ,MAAM,IAAIC,MAAM,+B,CAElB,MAAOC,GACP,MAAM,IAAID,MAAM,+B,ECxCpB,MAAMK,EAASC,SAASC,cAAc,WAChCC,EAAcF,SAASC,cAAc,iBACrCE,EAAUH,SAASC,cAAc,aACjCG,EAAWJ,SAASC,cAAc,cAClCI,EAAYL,SAASC,cAAc,eACnCK,EAAcN,SAASC,cAAc,gBACrCM,EAAcP,SAASC,cAAc,gBACrCO,EAAQR,SAASC,cAAc,UAkDrC,SAASQ,EAAYC,GACnBX,EAAOY,MAAMC,QAAU,OACvBJ,EAAMK,YAAcH,EACpBF,EAAMG,MAAMC,QAAU,O,CAIxBV,EAAYY,iBAAiB,UAhC7B3B,iBACE,MAAMU,EAAUK,EAAYa,MAE5B,GAAIlB,EACF,IACEE,EAAOY,MAAMC,QAAU,QACvBT,EAAQQ,MAAMC,QAAU,OAExB,MAAMI,QAAYpB,EAAgBC,GAElCO,EAASa,IAAMD,EAAIlB,IACnBO,EAAUQ,YAAcG,EAAIE,OAAO,GAAGC,KACtCb,EAAYO,YAAcG,EAAIE,OAAO,GAAGE,YACxCb,EAAYM,YAAcG,EAAIE,OAAO,GAAGG,YAExClB,EAAQQ,MAAMC,QAAU,QACxBb,EAAOY,MAAMC,QAAU,OACvBJ,EAAMG,MAAMC,QAAU,M,CACtB,MAAOjB,GACPc,EAAY,8C,KAzClBtB,iBACE,IACEY,EAAOY,MAAMC,QAAU,QACvBV,EAAYoB,UAAY,UAEHlC,KAEdmC,SAAQC,IACb,MAAMC,EAASzB,SAAS0B,cAAc,UACtCD,EAAOV,MAAQS,EAAMG,GACrBF,EAAOZ,YAAcW,EAAML,KAC3BjB,EAAY0B,YAAYH,EAAO,IAGjC1B,EAAOY,MAAMC,QAAU,OACvBV,EAAYS,MAAMC,QAAU,O,CAC5B,MAAOjB,GACPc,EAAY,wC,EAwChBoB","sources":["js/cat-api.js","js/index.js"],"sourcesContent":["// // debugger\n\nconst API_KEY = 'live_yJJgXppEDoms8PRuQx8sA35bNYUBrCYoqxUur118g8n0RW8lyrBNWSmtAZjOJXLR';\n\nexport async function fetchBreeds() {\n  const url = 'https://api.thecatapi.com/v1/breeds';\n\n  try {\n    const response = await fetch(url, {\n      headers: {\n        'x-api-key': API_KEY\n      }\n    });\n\n    if (response.ok) {\n      const breeds = await response.json();\n      return breeds;\n    } else {\n      throw new Error('Failed to fetch breeds');\n    }\n  } catch (error) {\n    throw new Error('Failed to fetch breeds');\n  }\n}\n\nexport async function fetchCatByBreed(breedId) {\n  const url = `https://api.thecatapi.com/v1/images/search?breed_ids=${breedId}`;\n\n  try {\n    const response = await fetch(url, {\n      headers: {\n        'x-api-key': API_KEY\n      }\n    });\n\n    if (response.ok) {\n      const cats = await response.json();\n      return cats[0];\n    } else {\n      throw new Error('Failed to fetch cat by breed');\n    }\n  } catch (error) {\n    throw new Error('Failed to fetch cat by breed');\n  }\n}\n\n// debugger\n\n// debugger\n","import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\nconst loader = document.querySelector('.loader');\nconst breedSelect = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst catImage = document.querySelector('.cat-image');\nconst breedName = document.querySelector('.breed-name');\nconst description = document.querySelector('.description');\nconst temperament = document.querySelector('.temperament');\nconst error = document.querySelector('.error');\n\n// Fetch breeds and populate select options\nasync function populateBreeds() {\n  try {\n    loader.style.display = 'block';\n    breedSelect.innerHTML = '';\n\n    const breeds = await fetchBreeds();\n\n    breeds.forEach(breed => {\n      const option = document.createElement('option');\n      option.value = breed.id;\n      option.textContent = breed.name;\n      breedSelect.appendChild(option);\n    });\n\n    loader.style.display = 'none';\n    breedSelect.style.display = 'block';\n  } catch (error) {\n    handleError('Error occurred while fetching breeds.');\n  }\n}\n\n// Fetch and display cat information by breed\nasync function fetchAndDisplayCat() {\n  const breedId = breedSelect.value;\n\n  if (breedId) {\n    try {\n      loader.style.display = 'block';\n      catInfo.style.display = 'none';\n\n      const cat = await fetchCatByBreed(breedId);\n\n      catImage.src = cat.url;\n      breedName.textContent = cat.breeds[0].name;\n      description.textContent = cat.breeds[0].description;\n      temperament.textContent = cat.breeds[0].temperament;\n\n      catInfo.style.display = 'block';\n      loader.style.display = 'none';\n      error.style.display = 'none'; // При вдалому пошуку котика приховати повідомлення про помилку\n    } catch (error) {\n      handleError('Error occurred while fetching cat by breed.');\n    }\n  }\n}\n\n// Handle error\nfunction handleError(errorMessage) {\n  loader.style.display = 'none';\n  error.textContent = errorMessage;\n  error.style.display = 'block';\n}\n\n// Event listeners\nbreedSelect.addEventListener('change', fetchAndDisplayCat);\n\n// Initialize the app\npopulateBreeds();\n"],"names":["async","$944b797ae9e51b1a$export$913382e0b15b5503","response","fetch","headers","ok","json","Error","error","$944b797ae9e51b1a$export$57b7d3a597416aa2","breedId","url","$d9e87e0b9ad7409a$var$loader","document","querySelector","$d9e87e0b9ad7409a$var$breedSelect","$d9e87e0b9ad7409a$var$catInfo","$d9e87e0b9ad7409a$var$catImage","$d9e87e0b9ad7409a$var$breedName","$d9e87e0b9ad7409a$var$description","$d9e87e0b9ad7409a$var$temperament","$d9e87e0b9ad7409a$var$error","$d9e87e0b9ad7409a$var$handleError","errorMessage","style","display","textContent","addEventListener","value","cat","src","breeds","name","description","temperament","innerHTML","forEach","breed","option","createElement","id","appendChild","$d9e87e0b9ad7409a$var$populateBreeds"],"version":3,"file":"index.11c52de8.js.map"}